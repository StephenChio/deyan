<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="/Users/stephen/OneTechLog" />
    <!-- 日志输出格式 -->
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度  %L:行号 %msg：日志消息，%n是换行符-->
    <property name="FILE_LOG_PATTERN" value="%d{MM-dd HH:mm:ss.SSS}  %-5level %logger{5}-%line - %msg%n"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{MM-dd HH:mm:ss.SSS} %-5level %logger{5}-%line - %msg%n"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                ${CONSOLE_LOG_PATTERN}
            </pattern>
        </layout>
	    <!--  临界值过滤器，过滤掉所有低于INFO级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">   
      		<level>INFO</level>   
    	</filter>
    </appender>
    
    
     <!-- 按照每天生成日志文件 -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
         <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/OneTech.log.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
            <MaxFileSize>300MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
    </appender>
    
     <!-- 按照每天生成日志文件 -->
    <appender name="infoAppender"  class="ch.qos.logback.core.rolling.RollingFileAppender">
         <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/OneTech.info.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
            <MaxFileSize>300MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
         <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印INFO日志 -->  
	        <level>INFO</level>  
	        <onMatch>ACCEPT</onMatch>  
	        <onMismatch>DENY</onMismatch>  
	    </filter> 
    </appender>
    
    <appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">  
    	<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/OneTech.error.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
            <MaxFileSize>300MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
	    <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印错误日志 -->  
	        <level>ERROR</level>  
	        <onMatch>ACCEPT</onMatch>  
	        <onMismatch>DENY</onMismatch>  
	    </filter>  
	</appender>  
    <appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">  
    	<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/OneTech.debug.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
            <MaxFileSize>300MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
	    <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印DEBUG日志 -->  
	        <level>DEBUG</level>  
	        <onMatch>ACCEPT</onMatch>  
	        <onMismatch>DENY</onMismatch>  
	    </filter>  
	</appender>  
    <appender name="warnAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">  
    	<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}/OneTech.warn.%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <totalSizeCap>1GB</totalSizeCap>
            <MaxFileSize>300MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${FILE_LOG_PATTERN}</pattern>
        </encoder>
	    <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印DEBUG日志 -->  
	        <level>WARN</level>  
	        <onMatch>ACCEPT</onMatch>  
	        <onMismatch>DENY</onMismatch>  
	    </filter>  
	</appender>  
	
	<logger name="sun.rmi" level="ERROR"/>
    <logger name="io.lettuce.core" level="ERROR"/>
    <logger name="org.springframework.data.redis.core" level="ERROR"/>
    <logger name="org.apache.ibatis.logging" level="DEBUG"/>
    <logger name="io.netty" level="ERROR"/>
    <logger name="com.OneTech" level="DEBUG">
    	<appender-ref ref="infoAppender"/>
    	<appender-ref ref="errorAppender"/>
    	<appender-ref ref="debugAppender"/>
    	<appender-ref ref="warnAppender"/>
    </logger>
    
    <root level="info">
     	<appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE" />
    </root>
    
</configuration>